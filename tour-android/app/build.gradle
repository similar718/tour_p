apply plugin: 'com.android.application'

android {
    signingConfigs {
        tour {
            storeFile file('../tour.jks')
            storePassword '123456'
            keyAlias = 'tour-key'
            keyPassword '123456'
        }
    }
    compileSdkVersion 29
    buildToolsVersion "28.0.3"
    defaultConfig {
        applicationId "cn.xmzt.www"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 19
        versionName "1.19"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters "armeabi-v7a"
        }
//        ndk {
//            //  APK优化之lib 支持cpu ,默认只保留一个armeabi-v7a
//            abiFilters("armeabi", "armeabi-v7a", "x86", "mips")
//        }
        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "bc7dd2ea0788e55e6046d41a", //JPush 上注册的包名对应的 Appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]
        flavorDimensions "1"
        multiDexEnabled true

        android.applicationVariants.all { variant ->
            variant.outputs.all {
                if ("release".equals(variant.buildType.name)) {
                    def fileName = "XMZT_v${defaultConfig.versionName}_release_${packageTime()}.apk"
                    outputFileName = fileName
                } else if ("debug".equals(variant.buildType.name)) {
                    def fileName = "XMZT_v${defaultConfig.versionName}_debug_${packageTime()}.apk"
                    outputFileName = fileName
                }
            }
        }
    }
    buildTypes {
        release {
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
            //混淆
            minifyEnabled true
            //Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.tour
        }
        debug {
            //混淆
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.tour
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            res.srcDirs = ['src/main/res', 'src/main/res-nim']
        }
    }
    //为了解决部分第三方库重复打包了META-INF的问题
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    dexOptions {
        incremental true
        javaMaxHeapSize "4g"
    }
}
repositories {
    flatDir {
        dirs 'libs'
    }
}

def packageTime() {
    return new Date().format("yyyyMMddHH")
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.2'
    implementation('io.reactivex.rxjava2:rxandroid:2.1.0') {
        exclude group: 'io.reactivex.rxjava2:rxjava'
    }
    implementation('com.squareup.retrofit2:retrofit:2.4.0') {
        exclude group: 'com.squareup.okhttp3:okhttp'
    }
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
//    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.0'

    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.youth.banner:banner:1.4.10'
    implementation 'com.github.crossoverone:StatusBarUtil:1.3.3'
    // 沉浸式基础依赖包，必须要依赖
//    implementation 'com.gyf.immersionbar:immersionbar:3.0.0'
    // 沉浸式 fragment快速实现（可选）
//    implementation 'com.gyf.immersionbar:immersionbar-components:3.0.0'

    api('com.contrarywind:Android-PickerView:4.1.8') {
        exclude group: 'com.contrarywind:wheelview'
    }
//    implementation 'com.github.wseemann:FFmpegMediaMetadataRetriever:1.0.14'
    implementation 'com.facebook.fresco:fresco:1.10.0'
//    implementation 'com.xiaozhiguang.library:TagTextView:1.0.0'
    //Android中的工具库
    implementation 'com.blankj:utilcode:1.23.8'
//下拉刷新、上拉加载更多
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0'
    //没有使用特殊Header，可以不加这行
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0'

    //图片加载库
    implementation 'com.github.bumptech.glide:glide:4.10.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.10.0'
    implementation 'jp.wasabeef:glide-transformations:4.1.0'
    // room数据库
    // room 配合 RxJava
    implementation 'androidx.room:room-rxjava2:2.0.0'
    annotationProcessor 'androidx.room:room-compiler:2.0.0'
    //eventbus
    implementation 'org.greenrobot:eventbus:3.1.1'
    //fastjson
    implementation 'com.alibaba:fastjson:1.2.57'
//    //三级联动PickerView
//    implementation 'com.contrarywind:Android-PickerView:4.1.8'
    //双向拖动的seekBar
    implementation 'com.github.Jay-Goo:RangeSeekBar:v3.0.0'
//    api project(':library')
//    api project(':base')
//    api project(':citypicker')
    // Fragmentation框架: 集成一个Activity对应多个Fragment模式
    implementation 'me.yokeyword:fragmentation-core:1.3.6'
    // 底部导航栏
    //implementation 'com.github.forvv231:EasyNavigation:1.0.3'
    //implementation project(':lib-easynavigation')
    implementation 'com.daimajia.easing:library:2.0@aar'
    implementation 'com.daimajia.androidanimations:library:2.2@aar'
    /*微信*/
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+'
    // 支付宝 SDK AAR 包所需的配置
    api(name: 'alipaySdk-15.6.5-20190718211148', ext: 'aar')
    /*视频播放器*/
    implementation 'com.shuyu:GSYVideoPlayer:6.0.3'

    //云信
    implementation 'com.netease.nimlib:jsbridge:1.3.1'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    implementation 'me.everything:overscroll-decor-android:1.0.4'
    implementation 'me.leolin:ShortcutBadger:1.1.17@aar'
    implementation 'com.chensl.rotatephotoview:rotatephotoview:1.0.5'
    implementation 'org.adw.library:discrete-seekbar:1.0.1'
    //implementation 'com.huawei.android.hms:push:2.6.0.301'
    implementation 'com.meizu.flyme.internet:push-internal:3.6.7@aar'
    implementation 'com.zhy:base-adapter:2.0.0'
    //对讲
    //implementation 'org.ar:rtmax_kit:3.0.6'
    //implementation(name:'rtmax_kits-release_v2.0.1', ext:'aar')
    //implementation(name: 'rtmax_kits-release', ext: 'aar')
    implementation(name: 'rtmax-release', ext: 'aar')
    implementation 'com.yanzhenjie:permission:2.0.3'
    //banner自定义

    implementation 'com.google.zxing:core:3.3.0'

    implementation 'com.yinglan.scrolllayout:scrolllayout:1.0.2'

    implementation 'cn.jiguang.sdk:jpush:3.3.4'  // 此处以JPush 3.3.4 版本为例。
    implementation 'cn.jiguang.sdk:jcore:2.1.2'  // 此处以JCore 2.1.2 版本为例。
    implementation 'com.airbnb.android:lottie:3.0.7'
//    implementation 'com.yinglan.shadowimageview:shadowimageview:1.0.4'

    implementation 'com.zyp.cardview:cardview:1.0.1'
//    implementation 'com.tencent.bugly:crashreport:3.1.0'
//    implementation 'com.tencent.bugly:crashreport:2.8.6'
    implementation(name: 'crashreport-2.8.6', ext: 'aar')
    //图片选择及剪切
    implementation 'com.github.LuckSiege.PictureSelector:picture_library:v2.2.9'
    //TinyPinyin 中文转拼音
//    implementation 'com.github.promeg:tinypinyin:2.0.3' // TinyPinyin核心包，约80KB
//    implementation 'com.github.promeg:tinypinyin-lexicons-android-cncity:2.0.3' // 可选，适用于Android的中国地区词典
}
